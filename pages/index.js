import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';

import softwareContractABI from '../abi/SoftwareTest.json';

import Portis from '@portis/web3';
import Web3 from 'web3';
// import LoadingGif from '../public/img/loading.gif'
var NodeUsed = 'ropsten';

//0xe90E628AB0A5c45592cfF1F09E1BDAEfd278915f
export default function Home() {
    const [loading, setLoading] = useState(true);
    const [isValid, setIsValid] = useState(null);
    const [isChecking, setIsChecking] = useState(true);
    const [error, setError] = useState(null);
    const router = useRouter();
    const { softwareContractAdr, redirectURI } = router.query;
    const [wallet, setWallet] = useState({ email: '', address: '' });

    useEffect(() => {
        const portis = new Portis(
            '2650813c-a25d-4f11-862a-6c00530d0dbc',
            NodeUsed,
            {
                scope: ['email'],
            }
        );
        portis.showPortis();
        function showPortisTimer() {
            portis
                .isLoggedIn()
                .then((res) => {
                    if (res.result === false) {
                        setLoading(true);
                        portis.showPortis();
                        setTimeout(showPortisTimer, 1000);
                    } else {
                        setLoading(false);
                    }
                })
                .catch((err) => {
                    setLoading(false);
                    console.error('An error occured:\n', error);
                });
        }
        showPortisTimer();
       
        const web3 = new Web3(portis.provider);
        let softwareContract = null;
        try {
            console.log('software Address: ', softwareContractAdr);
            softwareContract = new web3.eth.Contract(
                softwareContractABI,
                softwareContractAdr
            );
        } catch (error) {
           

            console.error(error);
        }

        console.log(softwareContract);
        portis.onLogin((walletAddress, email, reputation) => {
            setWallet({ email, address: walletAddress });
            if (softwareContract === null) {
                return;
            }

            // let message = '';
            console.log('Logged in, with address:', walletAddress);
            // signedMessage = '';
            setIsChecking(true);
            softwareContract.methods
                .check_license_v2()
                .call({ from: walletAddress })
                .then(async (isAdrValid) => {
                    if (isAdrValid) {
                        setIsValid(true);
                    } else {
                        setIsValid(false);
                    }
                    setIsChecking(false);
                    await fetch(redirectURI, {
                        method: 'POST',
                        mode: 'no-cors',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ is_valid: isAdrValid }),
                    })
                        .then((res) => console.log(res))
                        .catch((err) => {
                            console.log("FETCH ERRR: ",err);
                        });
                    
                })
                .catch((error) => {
                   
                    console.error('An error occured:\n', error);
                });
        });
    }, [softwareContractAdr]);

    return (
        <div className={styles.container}>
            <Head>
                <title>License Manager</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <link rel='icon' href='/favicon.ico' />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>Welcome to License Manager</h1>

                {loading ? (
                    
                    <p>Loading...</p>
                ) : (
                    <>
                        {softwareContractAdr && (
                            <h3>{`Software Address: ${softwareContractAdr}`}</h3>
                        )}
                        {wallet.email !== '' && (
                            <>
                                <p>{`Email: ${wallet.email}`}</p>
                                <p>{`Wallet address: ${wallet.address}`}</p>
                                {!isChecking &&
                                    (isValid ? (
                                        <Image
                                            src={'/img/valid.png'}
                                            height='30'
                                            width='30'
                                        />
                                    ) : (
                                        <Image
                                            src={'/img/invalid.png'}
                                            height='30'
                                            width='30'
                                        />
                                    ))}
                            </>
                        )}
                    </>
                )}
            </main>
        </div>
    );
}
